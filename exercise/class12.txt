#include <iostream>
#include <stdlib.h>
using namespace std;

//1.递归
int Fibonacci1(int n)
{
	if (n <= 0)
		return 0;
	if (n == 1 || n == 2)
		return 1;
	if (n >= 3)
		return Fibonacci1(n - 1) + Fibonacci1(n - 2);
}

//2.动态规划
/*
状态：F(n)
状态转移方程：F(n) = F(n - 1) + F(n - 2)
初始状态：F(1) = F(2) = 0
返回值：F(n)
*/
int Fibonacci2(int n)
{
	if (n <= 0)
		return 0;
	if (n == 1 || n == 2)
		return 1;
	int* arr = new int[n + 1];
	arr[0] = 0;
	arr[1] = 1;
	for (int i = 2; i <= n; i++)
	{
		arr[i] = arr[i - 1] + arr[i - 2];
	}
	return arr[n];
	delete[] arr;
}

int main()
{
	cout << Fibonacci2(4) << endl;
	system("pause");
	return 0;
}